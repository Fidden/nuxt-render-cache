/**
 * Единицы измерения времени для TTL (Time To Live).
 *
 * Поддерживаемые единицы:
 * - `s` - секунды
 * - `m` - минуты
 * - `h` - часы
 * - `d` - дни
 */
export type TTLUnits = 's' | 'm' | 'h' | 'd'

/**
 * Строковое представление TTL с числом и единицей измерения.
 *
 * Формат: `${число}${единица}`, где:
 * - число - положительное целое число
 * - единица - одна из поддерживаемых единиц времени ({@link TTLUnits})
 *
 * @example
 * ```typescript
 * "30s"  // 30 секунд
 * "5m"   // 5 минут
 * "2h"   // 2 часа
 * "1d"   // 1 день
 * ```
 */
export type TTLString = `${number}${TTLUnits}`

/**
 * Типы значений TTL, поддерживаемые системой кэширования.
 *
 * В настоящее время поддерживается только строковый формат ({@link TTLString}).
 */
export type TTLValues = TTLString

/**
 * Константа с множителями для преобразования единиц времени в секунды.
 *
 * Используется внутренней логикой для расчета TTL в секундах.
 */
const TIME_UNITS = {
  s: 1, // секунды
  m: 60, // минуты в секундах
  h: 3600, // часы в секундах
  d: 86400, // дни в секундах
} as const

/**
 * Преобразует строковое значение TTL в количество секунд.
 *
 * Функция разбирает строковое представление времени в формате "число + единица"
 * и преобразует его в абсолютное значение в секундах. Поддерживаемые единицы времени
 * определены в типе {@link TTLUnits}.
 *
 * @param ttl - Строковое значение TTL в формате "число + единица" (например: "5m", "2h", "30s", "1d").
 *              Число должно быть положительным целым числом.
 * @returns Количество секунд, соответствующее переданному TTL.
 *
 * @throws {Error} Если переданная строка пустая или не является строкой.
 * @throws {Error} Если формат строки не соответствует ожидаемому ("число + единица").
 * @throws {Error} Если число в строке не является положительным.
 * @throws {Error} Если единица времени не поддерживается.
 *
 * @example
 * ```typescript
 * console.log(ttlToNumber("5m"))  // 300 (5 минут = 300 секунд)
 * console.log(ttlToNumber("2h"))  // 7200 (2 часа = 7200 секунд)
 * console.log(ttlToNumber("30s")) // 30 (30 секунд)
 * console.log(ttlToNumber("1d"))  // 86400 (1 день = 86400 секунд)
 *
 * // Примеры ошибок:
 * ttlToNumber("")        // Error: TTL должен быть непустой строкой
 * ttlToNumber("abc")     // Error: Некорректный формат TTL
 * ttlToNumber("0m")      // Error: Значение TTL должно быть положительным
 * ttlToNumber("5x")      // Error: Неизвестная единица времени: "x"
 * ```
 */
export function ttlToNumber(ttl: string): number {
  if (!ttl || typeof ttl !== 'string') {
    throw new Error('TTL должен быть непустой строкой')
  }

  // Регулярное выражение для разбора строки: число + единица времени
  const match = ttl.match(/^(\d+)([smhd])$/)

  if (!match) {
    throw new Error(
      `Некорректный формат TTL: "${ttl}". Ожидается формат "число + единица" (s/m/h/d), например: "5m", "2h"`,
    )
  }

  const [, valueStr, unit] = match
  const value = Number.parseInt(valueStr!, 10)

  if (value <= 0) {
    throw new Error(
      `Значение TTL должно быть положительным числом, получено: ${value}`,
    )
  }

  const multiplier = TIME_UNITS[unit as TTLUnits]

  if (!multiplier) {
    throw new Error(
      `Неизвестная единица времени: "${unit}". Поддерживаемые единицы: s (секунды), m (минуты), h (часы), d (дни)`,
    )
  }

  return value * multiplier
}
